Index: src/api/api.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\r\n        \"API-KEY\": \"40ffb3ac-7a26-461e-9d58-b5b7054c7f94\"\r\n    }\r\n});\r\n\r\nexport const allUsersAPI = {\r\n    getAllUsers(currentPage, countUsersOnPage) {\r\n        return instance.get(`users?page=${currentPage}&count=${countUsersOnPage}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    followDelete(id) {\r\n        return instance.delete(`follow/${id}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    followPost(id) {\r\n        return instance.post(`follow/${id}`, {})\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    }\r\n};\r\nexport const mainAPI = {\r\n    getUserProfile(userId) {\r\n        return instance.get(`profile/` + userId)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    getUserStatus(userId){\r\n        return instance.get(`profile/status/` + userId)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    updateUserStatus(status){\r\n        return instance.put(`profile/status`, {status: status})\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n};\r\nexport const headerAPI = {\r\n    me () {\r\n        return instance.get(`auth/me`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    login(email, password, rememberMe=false){\r\n        return instance.post(`/auth/login`, {email, password, rememberMe})\r\n        .then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    logout(){\r\n        return instance.delete(`/auth/login`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    capcha(){\r\n        return instance.get(`security/get-captcha-url`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    getURLPhoto (userId) {\r\n        return instance.get(`profile/` + userId)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n    }\r\n\r\n};\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/api/api.js	(revision a6d08c14ee20aea4a5e0d193b494a32c0c32737d)
+++ src/api/api.js	(date 1592311056207)
@@ -4,7 +4,7 @@
     baseURL: 'https://social-network.samuraijs.com/api/1.0/',
     withCredentials: true,
     headers: {
-        "API-KEY": "40ffb3ac-7a26-461e-9d58-b5b7054c7f94"
+        "API-KEY":"47179166-0404-4bba-a6c9-441eae4ccb60"
     }
 });
 
@@ -33,6 +33,12 @@
         return instance.get(`profile/` + userId)
             .then(response => {
                 return response.data
+            })
+    },
+    saveNewData(profile) {
+        return instance.put(`profile`, profile)
+            .then(response => {
+                return response.data
             })
     },
     getUserStatus(userId){
@@ -47,6 +53,19 @@
                 return response.data
             })
     },
+    savePhoto(photoFile){
+        const formData = new FormData();
+        formData.append('image', photoFile)
+
+        return instance.put(`profile/photo`, formData, {
+            headers: {
+                'Content-Type': 'multipart/form-data'
+            }
+        })
+            .then(response => {
+                return response.data
+            })
+    }
 };
 export const headerAPI = {
     me () {
@@ -55,8 +74,8 @@
                 return response.data
             })
     },
-    login(email, password, rememberMe=false){
-        return instance.post(`/auth/login`, {email, password, rememberMe})
+    login(email, password, rememberMe=false, captcha=null ){
+        return instance.post(`/auth/login`, {email, password, rememberMe, captcha})
         .then(response => {
             return response.data
         })
@@ -67,7 +86,7 @@
                 return response.data
             })
     },
-    capcha(){
+    captcha(){
         return instance.get(`security/get-captcha-url`)
             .then(response => {
                 return response.data
