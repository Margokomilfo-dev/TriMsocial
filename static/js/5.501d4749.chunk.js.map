{"version":3,"sources":["components/Header/Login/Login.module.css","components/Validations.module.css","components/Validations.jsx","object_helpers/object_helpers.js","components/Header/Login/Login.jsx"],"names":["module","exports","validate","values","errors","email","length","password","registerLogin","registerPassword1","registerPassword2","Input","input","placeholder","type","meta","touched","error","className","s","wrap","errorText","createField","component","name","fieldText","Field","LoginReduxForm","reduxForm","form","handleSubmit","capcha","urlCapcha","pristine","submitting","reset","check_in","onSubmit","checkbox","commonError","src","alt","go","disabled","onClick","loginButton","to","RegisterReduxForm","register","header","header_top","header_bottom","connect","state","isLogin","auth","login","setCapcha","formData","rememberMe"],"mappings":"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","file":"static/js/5.501d4749.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__1raa9\",\"check_in\":\"Login_check_in__3vwPL\",\"register\":\"Login_register__Y7s27\",\"form\":\"Login_form__3A-gp\",\"checkbox\":\"Login_checkbox__2aE-t\",\"header\":\"Login_header__8fHXP\",\"header_top\":\"Login_header_top__1CWUb\",\"header_bottom\":\"Login_header_bottom__1FuvR\",\"commonError\":\"Login_commonError__1GFHh\",\"loginButton\":\"Login_loginButton__2_ngu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Validations_wrap__1G7xw\",\"errorText\":\"Validations_errorText__3gLfF\"};","import React from 'react'\r\nimport s from './Validations.module.css'\r\n\r\n\r\nexport let validate = (values) => {\r\n    const errors = {}\r\n    if (!values.email) {\r\n        errors.email = 'Required'\r\n    } else\r\n        if (values.email.length < 5 || values.email.length > 20) {\r\n        errors.email = 'Must be 5-20 characters or less'\r\n    }\r\n\r\n    if (!values.password) {\r\n        errors.password = 'Required'\r\n    } else if (values.password.length < 5 || values.password.length > 15) {\r\n        errors.password = 'Must be 5-15 characters'\r\n    }\r\n\r\n    if (!values.registerLogin) {\r\n        errors.registerLogin = 'Required'\r\n    } else if (values.registerLogin.length < 5 || values.registerLogin.length > 20) {\r\n        errors.registerLogin = 'Must be 5-20 characters'\r\n    }\r\n\r\n    if (!values.registerPassword1) {\r\n        errors.registerPassword1 = 'Required'\r\n    } else if (values.registerPassword1.length < 5 || values.registerPassword1.length > 15) {\r\n        errors.registerPassword1 = 'Must be 5-15 characters'\r\n    }\r\n\r\n    if (!values.registerPassword2) {\r\n        errors.registerPassword2 = 'Required'\r\n    } else if (values.registerPassword2.length < 5 || values.registerPassword2.length > 15) {\r\n        errors.registerPassword2 = 'Must be 5-15 characters'\r\n    }\r\n\r\n   // !!values.registerPassword1 && !!values.registerPassword2 && (values.registerPassword1 !== values.registerPassword2) &&(values.registerPassword1.length > 5 && values.registerPassword1.length < 15 ) && (values.registerPassword2.length > 5 && values.registerPassword2.length < 15 ))\r\n    if (values.registerPassword1 !== values.registerPassword2) {\r\n        errors.registerPassword1 = 'not the same'\r\n        errors.registerPassword2 = 'not the same'\r\n    } else if(!values.registerPassword1) {\r\n        errors.registerPassword1 = 'Required'\r\n    } else if(values.registerPassword1.length < 5 || values.registerPassword1.length > 15 ) {\r\n        errors.registerPassword1 = 'Must be 5-15 characters'\r\n    } else if(values.registerPassword2.length < 5 || values.registerPassword2.length > 15 ) {\r\n    errors.registerPassword2 = 'Must be 5-15 characters'\r\n    }  else if(!values.registerPassword2){\r\n        errors.registerPassword2 = 'Required'\r\n    } else {\r\n        errors.registerPassword2 = 'Yeee! The passwords are the same!!'\r\n    }\r\n\r\n    return errors\r\n}\r\n\r\nexport const Input = ({input, placeholder,  type, meta: {touched, error}}) => {\r\n    return (\r\n        <div>\r\n            <input {...input} placeholder={placeholder} type={type}/>\r\n            {touched && (error &&\r\n                (<div className={s.wrap} >\r\n                    <div className={s.errorText}>{error}</div>\r\n                </div>)\r\n                )}\r\n        </div>\r\n    )\r\n}","import {Field} from \"redux-form\";\r\nimport React from \"react\";\r\n\r\nexport const updateObjectInArray = (items, objPropName, itemId, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u\r\n    })\r\n}\r\n\r\nexport const createField = (className, component, type, name, placeholder, fieldText) => {\r\n    return (\r\n        <div className={className}>\r\n            <Field component ={component} type={type} name={name} placeholder={placeholder}/> {fieldText}\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport s from './Login.module.css'\r\nimport { reduxForm } from 'redux-form'\r\nimport {Input, validate} from \"../../Validations\";\r\nimport {login, setCapcha} from \"../../../redux/auth_reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {createField} from \"../../../object_helpers/object_helpers\";\r\n\r\nlet LoginForm = ({handleSubmit, error, capcha, urlCapcha, pristine, submitting, reset}) => {\r\n    return (\r\n        <div>\r\n            <div className={s.check_in}>\r\n                <form className={s.form} onSubmit={handleSubmit}>\r\n                    {createField(null, Input, 'email', 'email', 'email', null )}\r\n                    {createField(null, Input, 'password', 'password', 'password', null )}\r\n                    {createField(s.checkbox, Input, 'checkbox', 'rememberMe', null, 'remember me ')}\r\n                    {/*---------------common_error-------------------*/}\r\n                    {error &&\r\n                    <div className={s.commonError}>\r\n                        {error}\r\n                    </div>}\r\n                    {/*---------------capcha-------------------------*/}\r\n                    {!capcha &&\r\n                    <div className={s.capcha}>\r\n                        <img src={urlCapcha} alt=\"\"/>\r\n                        {/*{createField(null, Input, 'text', 'capcha', 'capcha', null )}*/}\r\n                        {/*<Field component={Input} name='capcha' placeholder='capcha' type='text'/>*/}\r\n                    </div>}\r\n                    <div className={s.go}>\r\n                        <button type='button' disabled={pristine || submitting} onClick={reset}>Clear Values</button>\r\n                        <button type='submit' className={s.loginButton}>Login</button>\r\n                        <NavLink to='/'>Forgot the password</NavLink>\r\n                    </div>\r\n                    данные тестового аккаунта:\r\n                    Email: free@samuraijs.com\r\n\r\n                    Password: free\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nlet RegisterForm = ({handleSubmit,pristine,submitting,reset }) => {\r\n    return (\r\n        <div className={s.register}>\r\n            <div className={s.header}>\r\n                <div className={s.header_top}>Впервые в 3Msocial? </div>\r\n                <div className={s.header_bottom}>Моментальная регистрация </div>\r\n            </div>\r\n            <form className={s.form} onSubmit={handleSubmit}>\r\n                {createField(null, Input, 'text', 'registerEmail', \"email\", null)}\r\n                {createField(null, Input, 'password', 'registerPassword1', 'password', null )}\r\n                {createField(null, Input, 'password', 'registerPassword2', 'password', null )}\r\n                <div className={s.go}>\r\n                    <button type='submit' className={s.loginButton}>Login</button>\r\n                    <button type='button' disabled={pristine || submitting} onClick={reset}>Clear Values</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet LoginReduxForm = reduxForm({form: 'loginForm', validate})(LoginForm)\r\nlet RegisterReduxForm = reduxForm({form: 'registerForm', validate})(RegisterForm)\r\n\r\nlet Login = ({login, isLogin, urlCapcha}) => {\r\n    let onSubmit = (formData) => {\r\n        login(formData.email, formData.password, formData.rememberMe)\r\n\r\n    };\r\n\r\n    if(isLogin){\r\n        return <Redirect to='/profile'/>\r\n    }\r\n\r\n    return (\r\n        <div className = {s.login}>\r\n            <LoginReduxForm onSubmit={onSubmit} urlCapcha={urlCapcha}/>\r\n            <RegisterReduxForm onSubmit={onSubmit}/>\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isLogin: state.auth.isLogin,\r\n    capcha: state.auth.capcha,\r\n    urlCapcha: state.auth.urlCapcha,\r\n\r\n});\r\nexport default connect (mapStateToProps, {login, setCapcha})(Login)"],"sourceRoot":""}