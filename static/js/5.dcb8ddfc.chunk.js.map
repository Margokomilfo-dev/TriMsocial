{"version":3,"sources":["components/Header/Login/Login.module.css","components/Header/Login/Login.jsx"],"names":["module","exports","LoginReduxForm","reduxForm","form","validate","handleSubmit","error","capcha","urlCapcha","pristine","submitting","reset","className","s","check_in","onSubmit","createField","Input","checkbox","commonError","src","alt","go","type","disabled","onClick","loginButton","to","RegisterReduxForm","register","header","header_top","header_bottom","Login","formData","props","login","email","password","rememberMe","prevProps","prevState","snapshot","this","isLogin","initializationTriM","React","Component","connect","state","auth","setCapcha"],"mappings":"6FACAA,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,SAAW,wBAAwB,SAAW,wBAAwB,KAAO,oBAAoB,SAAW,wBAAwB,OAAS,sBAAsB,WAAa,0BAA0B,cAAgB,6BAA6B,YAAc,2BAA2B,YAAc,6B,uLC+DzVC,EAAiBC,YAAU,CAACC,KAAM,YAAaC,cAA9BF,EAtDL,SAAC,GAA2E,IAA1EG,EAAyE,EAAzEA,aAAcC,EAA2D,EAA3DA,MAAOC,EAAoD,EAApDA,OAAQC,EAA4C,EAA5CA,UAAWC,EAAiC,EAAjCA,SAAUC,EAAuB,EAAvBA,WAAYC,EAAW,EAAXA,MAC5E,OACI,6BACI,yBAAKC,UAAWC,IAAEC,UACd,0BAAMF,UAAWC,IAAEV,KAAMY,SAAUV,GAC9BW,YAAY,KAAMC,IAAO,QAAS,QAAS,QAAS,MACpDD,YAAY,KAAMC,IAAO,WAAY,WAAY,WAAY,MAC7DD,YAAYH,IAAEK,SAAUD,IAAO,WAAY,aAAc,KAAM,gBAE/DX,GACD,yBAAKM,UAAWC,IAAEM,aACbb,IAGHC,GACF,yBAAKK,UAAWC,IAAEN,QACd,yBAAKa,IAAKZ,EAAWa,IAAI,MAI7B,yBAAKT,UAAWC,IAAES,IACd,4BAAQC,KAAK,SAASC,SAAUf,GAAYC,EAAYe,QAASd,GAAjE,gBACA,4BAAQY,KAAK,SAASX,UAAWC,IAAEa,aAAnC,SACA,kBAAC,IAAD,CAASC,GAAG,KAAZ,wBAnBR,+LAmDZC,EAAoB1B,YAAU,CAACC,KAAM,eAAgBC,cAAjCF,EArBL,SAAC,GAA+C,IAA9CG,EAA6C,EAA7CA,aAAaI,EAAgC,EAAhCA,SAASC,EAAuB,EAAvBA,WAAWC,EAAY,EAAZA,MAClD,OACI,yBAAKC,UAAWC,IAAEgB,UACd,yBAAKjB,UAAWC,IAAEiB,QACd,yBAAKlB,UAAWC,IAAEkB,YAAlB,gEACA,yBAAKnB,UAAWC,IAAEmB,eAAlB,iJAEJ,0BAAMpB,UAAWC,IAAEV,KAAMY,SAAUV,GAC9BW,YAAY,KAAMC,IAAO,OAAQ,gBAAiB,QAAS,MAC3DD,YAAY,KAAMC,IAAO,WAAY,oBAAqB,WAAY,MACtED,YAAY,KAAMC,IAAO,WAAY,oBAAqB,WAAY,MACvE,yBAAKL,UAAWC,IAAES,IACd,4BAAQC,KAAK,SAASX,UAAWC,IAAEa,aAAnC,SACA,4BAAQH,KAAK,SAASC,SAAUf,GAAYC,EAAYe,QAASd,GAAjE,sBAUdsB,E,2MAMFlB,SAAW,SAACmB,GACR,EAAKC,MAAMC,MAAMF,EAASG,MAAOH,EAASI,SAAUJ,EAASK,a,+HAG9CC,EAAWC,EAAWC,GACjCC,KAAKR,MAAMS,UAAYJ,EAAUI,SACrCD,KAAKR,MAAMU,uB,+BAKX,OAAIF,KAAKR,MAAMS,QACJ,kBAAC,IAAD,CAAUjB,GAAI,aAIrB,yBAAKf,UAAaC,IAAEuB,OAChB,kBAACnC,EAAD,CAAgBc,SAAU4B,KAAK5B,SAAUP,UAAWmC,KAAKR,MAAM3B,YAC/D,kBAACoB,EAAD,CAAmBb,SAAU4B,KAAK5B,gB,GAxB9B+B,IAAMC,WAqCXC,uBANO,SAACC,GAAD,MAAY,CAC9BL,QAASK,EAAMC,KAAKN,QACpBrC,OAAQ0C,EAAMC,KAAK3C,OACnBC,UAAWyC,EAAMC,KAAK1C,aAGe,CAAC4B,UAAOe,cAAWN,wBAA7CG,CAAkEf","file":"static/js/5.dcb8ddfc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__1raa9\",\"check_in\":\"Login_check_in__3vwPL\",\"register\":\"Login_register__Y7s27\",\"form\":\"Login_form__3A-gp\",\"checkbox\":\"Login_checkbox__2aE-t\",\"header\":\"Login_header__8fHXP\",\"header_top\":\"Login_header_top__1CWUb\",\"header_bottom\":\"Login_header_bottom__1FuvR\",\"commonError\":\"Login_commonError__1GFHh\",\"loginButton\":\"Login_loginButton__2_ngu\"};","import React from 'react'\r\nimport s from './Login.module.css'\r\nimport { reduxForm } from 'redux-form'\r\nimport {Input, validate} from \"../../Validations\";\r\nimport {login, setCapcha} from \"../../../redux/auth_reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {createField} from \"../../../object_helpers/object_helpers\";\r\nimport {initializationTriM} from \"../../../redux/trim_reducer\";\r\n\r\nlet LoginForm = ({handleSubmit, error, capcha, urlCapcha, pristine, submitting, reset}) => {\r\n    return (\r\n        <div>\r\n            <div className={s.check_in}>\r\n                <form className={s.form} onSubmit={handleSubmit}>\r\n                    {createField(null, Input, 'email', 'email', 'email', null )}\r\n                    {createField(null, Input, 'password', 'password', 'password', null )}\r\n                    {createField(s.checkbox, Input, 'checkbox', 'rememberMe', null, 'remember me ')}\r\n                    {/*---------------common_error-------------------*/}\r\n                    {error &&\r\n                    <div className={s.commonError}>\r\n                        {error}\r\n                    </div>}\r\n                    {/*---------------capcha-------------------------*/}\r\n                    {!capcha &&\r\n                    <div className={s.capcha}>\r\n                        <img src={urlCapcha} alt=\"\"/>\r\n                        {/*{createField(null, Input, 'text', 'capcha', 'capcha', null )}*/}\r\n                        {/*<Field component={Input} name='capcha' placeholder='capcha' type='text'/>*/}\r\n                    </div>}\r\n                    <div className={s.go}>\r\n                        <button type='button' disabled={pristine || submitting} onClick={reset}>Clear Values</button>\r\n                        <button type='submit' className={s.loginButton}>Login</button>\r\n                        <NavLink to='/'>Forgot the password</NavLink>\r\n                    </div>\r\n                    данные тестового аккаунта:\r\n                    Email: free@samuraijs.com\r\n                    Password: free\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nlet RegisterForm = ({handleSubmit,pristine,submitting,reset }) => {\r\n    return (\r\n        <div className={s.register}>\r\n            <div className={s.header}>\r\n                <div className={s.header_top}>Впервые в 3Msocial? </div>\r\n                <div className={s.header_bottom}>Моментальная регистрация </div>\r\n            </div>\r\n            <form className={s.form} onSubmit={handleSubmit}>\r\n                {createField(null, Input, 'text', 'registerEmail', \"email\", null)}\r\n                {createField(null, Input, 'password', 'registerPassword1', 'password', null )}\r\n                {createField(null, Input, 'password', 'registerPassword2', 'password', null )}\r\n                <div className={s.go}>\r\n                    <button type='submit' className={s.loginButton}>Login</button>\r\n                    <button type='button' disabled={pristine || submitting} onClick={reset}>Clear Values</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet LoginReduxForm = reduxForm({form: 'loginForm', validate})(LoginForm)\r\nlet RegisterReduxForm = reduxForm({form: 'registerForm', validate})(RegisterForm)\r\n\r\nclass Login extends React.Component{\r\n\r\n    componentDidMount() {\r\n        //this.props.initializationTriM();\r\n    }\r\n\r\n    onSubmit = (formData) => {\r\n        this.props.login(formData.email, formData.password, formData.rememberMe)\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.isLogin !== prevProps.isLogin) {\r\n        this.props.initializationTriM()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.props.isLogin) {\r\n            return <Redirect to={'/profile'}/>\r\n        }\r\n        return (\r\n\r\n            <div className = {s.login}>\r\n                <LoginReduxForm onSubmit={this.onSubmit} urlCapcha={this.props.urlCapcha}/>\r\n                <RegisterReduxForm onSubmit={this.onSubmit}/>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isLogin: state.auth.isLogin,\r\n    capcha: state.auth.capcha,\r\n    urlCapcha: state.auth.urlCapcha,\r\n\r\n});\r\nexport default connect (mapStateToProps, {login, setCapcha, initializationTriM})(Login)\r\n"],"sourceRoot":""}